<!DOCTYPE html>
<html>

<head>
    <meta charset='utf-8'>
    <meta http-equiv='X-UA-Compatible' content='IE=edge'>
    <title>Page Title</title>
    <meta name='viewport' content='width=device-width, initial-scale=1'>

    <style>
        body {
            height: 100vh;
            background-color: #eee;
            overflow: hidden;
            width: 100vw;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            overflow: hidden;
           
        
        }
        *{
           
        }



        .scene {
            width: 200px;
            height: 300px;
          
            perspective: 400px;
            animation: comeOn 1s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;
        }

        @keyframes comeOn {
            from {

                perspective: 120px;
                opacity: 0;
            }

            to {
                perspective: 400px;
                opacity: 1;

            }

        }

        .container,
        .container2,
        .container3 {

            width: 200px;
            height: 100px;
            position: absolute;

            transform: rotateX(45deg) rotateY(45deg);
            transform-style: preserve-3d;

            transform: rotateY(0deg) rotateX(0deg);
            transition: transform 1s cubic-bezier(0.165, 0.84, 0.44, 1);

            /*cubic-bezier(0.165, 0.84, 0.44, 1);*/

            /*cubic-bezier(0.075, 0.82, 0.165, 1);*/


        }

        .container2 {
            z-index: 2;
            top: 100px;
        }

        .container3 {
            top: 200px;
        }

        .card {
            width: 100%;
            height: 100%;
            background-color: deeppink;
            position: absolute;

            background-image: url('bg1.jpg');
            background-size: 100%;
            user-select: none;


        }

        .bottom {
            height: 200%;
            transform: translateY(0%) rotateX(90deg);
            background: black;

        }

        .left {
            transform: translateX(-50%) rotateY(90deg) scaleX(-1);
            background-color: brown;
        }

        .right {
            transform: translateX(50%) rotateY(90deg);
            background-color: rgb(71, 165, 42);
        }

        .back {
            transform: translateZ(100px);
            background-color: black;
        }

        .front {
            transform: scaleX(-1) translateZ(-100px);
            background-color: black;
        }

        .top {
            transform: translateY(-50%) rotateX(90deg);
            background: black;
            height: 200%;
        }

        .container .card.back {
            background-position: 0 0;
        }

        .container2 .card.back {
            background-position: 0 200px;
        }

        .container3 .card.back {
            background-position: 0 400px;
        }



        .container .card.right {
            background-position: 0 0;
            background-image: url('bg4.jpg');
        }

        .container2 .card.right {
            background-image: url('bg4.jpg');
            background-position: 0 200px;
        }

        .container3 .card.right {
            background-image: url('bg4.jpg');
            background-position: 0 400px;
        }





        .container .card.left {
            background-position: 0 0;
            background-image: url('bg2.jpg');
        }

        .container2 .card.left {
            background-image: url('bg2.jpg');
            background-position: 0 200px;
        }

        .container3 .card.left {
            background-image: url('bg2.jpg');
            background-position: 0 400px;
        }



        .container .card.front {
            background-position: 0 0;
            background-image: url('bg3.jpg');
        }

        .container2 .card.front {
            background-image: url('bg3.jpg');
            background-position: 0 200px;
        }

        .container3 .card.front {
            background-image: url('bg3.jpg');
            background-position: 0 400px;
        }



        .overlay {

            height: 100%;
            width: 100%;
            position: absolute;
            z-index: 3;
            background-image: url('bg.jpg');
            background-size: 100%;
            transform: translateZ(100px);
            user-select: none;

        }

        .shadow {
            width: 220px;
            height: 200px;
            background-color: black;
            transform: translateX(-10px) translateY(215px) rotateX(90deg);
            position: absolute;
            box-shadow: 1px 1px 20px black;

            filter: blur(20px);
        }


        .arrow_body {
            background-color: black;
            height: 2px;
            width: 10px;
            position: absolute;

        }

        .arrow_right {
            background-color: black;
            height: 2px;
            width: 7px;
            position: absolute;
            right: 0;
            transform: rotate(45deg);
            transform-origin: 100% 50%;


        }

        .arrow_right.left {
            transform: rotate(-45deg);
        }

        .arrow_container {
            position: relative;
            width: 10px;
            height: 10px;
            z-index: 5;
            position: absolute;
            top: 50%;
            right: -70px;
            cursor: pointer;
            border: 10px solid transparent;
            transition: transform 1s cubic-bezier(0.075, 0.82, 0.165, 1);

        }

        .arrow_container:hover {
            transform: translateX(5px);
        }

        .arrow_container:active {
            color: red
        }

        .arrow_container.aleft {
            left: -70px;
            transform: scaleX(-1)
        }

        .arrow_container.aleft:hover {
            left: -70px;
            transform: scaleX(-1) translateX(5px);
        }

        .arrow_container:active .arrow_right,
        .arrow_container:active .arrow_body {
            background-color: darkred;
        }

        .arrow_container::after {
            background-color: red;
        }
    </style>
</head>

<body>




    <div class="scene">
        <div class="arrow_container">
            <div class="arrow_right"></div>
            <div class="arrow_body"></div>
            <div class="arrow_right left"></div>
        </div>

        <div class="arrow_container aleft">
            <div class="arrow_right"></div>
            <div class="arrow_body"></div>
            <div class="arrow_right left"></div>
        </div>


        <div class="overlay">

        </div>

        <div class="shadow"></div>
        <div class="container">
            <div class="card bottom"></div>
            <div class="card left"></div>
            <div class="card right"></div>
            <div class="card top"></div>
            <div class="card back"></div>
            <div class="card front"></div>
        </div>

        <div class="container2">

            <div class="card left"></div>
            <div class="card right"></div>
            <div class="card top"></div>
            <div class="card back"></div>
            <div class="card front"></div>
        </div>

        <div class="container3">
            <div class="card bottom"></div>
            <div class="card left"></div>
            <div class="card right"></div>
            <div class="card top"></div>
            <div class="card back"></div>
            <div class="card front"></div>
        </div>


    </div>
    <!-- <br>
    <div class="outer">

        <div class="inner">inner</div>
    </div> -->

    <script>


        const item = document.querySelector('.box');
      
        const container = document.querySelector('.container');
        const container2 = document.querySelector('.container2');
        const container3 = document.querySelector('.container3');
        var anglex = Math.random() * Math.PI;
        var angley = Math.random() * Math.PI;
        var cs = 1
        var si = 1
        var zi = 0;
        document.addEventListener('pointermove', handler)
        function handler(evt) {
            var x = evt.clientX;
            var y = evt.clientY;

            var xt = x / window.innerWidth * 360
            var yt = y / window.innerHeight * 360

            var th = x / window.innerWidth * Math.PI * 2
            console.log(x / window.innerWidth
            )


            // item.style.transform=`perspective(400px) rotate3d(${cs},${si},${zi},${xt}deg)`


            var angle = -Math.PI / 4;
            var cos = Math.cos(angle)
            var sin = Math.sin(angle)

            // item.style.transform=`perspective(400px) matrix(${cos}, ${-sin}, ${sin}, ${cos}, 0, 0)`

            // xt=0
            /*   container.style.transform=`rotateY(${xt+Math.PI*0}deg) rotateX(${yt*0}deg)  `
              container2.style.transform=`rotateY(${xt+Math.PI*0}deg) rotateX(${yt*0}deg)  `
              container3.style.transform=`rotateY(${xt}deg) rotateX(${yt*0}deg)  `
      */
        }
        var xt = 0
        var overlay = document.querySelector('.overlay')
        overlay.style.display = "none"





        var timer;
        var counter = 1
        var isRotating=false;
        function rotateItems() {
            if (timer) clearTimeout(timer)
            isRotating=true;
            //  overlay.style.display='none'
            container.angleX+=90
            container.style.transform = `rotateY(${container.angleX}deg) rotateX(${0}deg)`
            setTimeout(() => {
                container2.angleX+=90;
                container2.style.transform = `rotateY(${container2.angleX}deg) rotateX(${0}deg)`

            }, 100)
            setTimeout(() => {
                container3.angleX+=90;
                container3.style.transform = `rotateY(${ container3.angleX}deg) rotateX(${0}deg)`
                
                if (timer) clearTimeout(timer)
                timer = setTimeout(() => {
                    // overlay.style.display='block'
                    overlay.style['background-image'] = `url(bg${counter}.jpg)`
                    isRotating=false;
                }, 1000)



            }, 200)

        }
        document.querySelector('.arrow_container').addEventListener('click',
            function onClick(event) {
                //  overlay.style.display='none'
                xt += 90
                counter = (counter) % 4 + 1
                console.log('hey')
                rotateItems()

            })

        document.querySelector('.arrow_container.aleft').addEventListener('click',
            function onClick(event) {
                //   overlay.style.display='none'
                xt -= 90
                counter = (counter) % 4 - 1
                console.log('neg')
                rotateItems()

            })



            
            var x0=0;
            var y0=0;
            var DX=0;
            var DY=0;
            var mouse={x:0,y:0}
            var isDown=false;
            var angleX=0;
            var angleY=0;
            container.angleX=0
            container.angleY=0;

            var containers=[container,container2,container3]
            containers.forEach(x=>{
                x.angleX=0
            x.angleY=0;
            x.DX=0;
            x.DY=0;
            })

            var ct=null;
      document.addEventListener("pointermove", handler);
      document.addEventListener('pointerdown',(evt)=>{
        isDown=true;
    
        
        if(evt.target.parentNode?.className.includes('contain')){
            ct=evt.target.parentNode
        }
        else{
            ct=null
        }
      //if(ct.parentNode.className.include('contain')) console.log(ct.parentNode)
        x0=evt.clientX;
        y0=evt.clientY;
        console.log('mouse down')

      })
      document.addEventListener('pointerleave',()=>{isDown=false})
       document.addEventListener('pointerup',()=>{
        isDown=false;
        console.log('mouse up');

      })

       var Ax=0;
      function handler(evt) {
        
        var x=evt.clientX;
        var y=evt.clientY;
        var dx=x-x0;
        var dy=(y-y0);

        if(isDown && ct){
          
            ct.DX+=dx/8;
            ct.DY+=dy/8;
           mouse.x=x;
           mouse.y=y;
        }
       
       // console.log(dx)

        var xt = (x / window.innerWidth) * 360;
        var yt = (y / window.innerHeight) * 360;

        var th = (x / window.innerWidth) * Math.PI * 2;
     //   console.log(x / window.innerWidth);

        // item.style.transform=`perspective(400px) rotate3d(${cs},${si},${zi},${xt}deg)`

        var angle = -Math.PI / 4;
        var cos = Math.cos(angle);
        var sin = Math.sin(angle);
        if(isDown)  Ax=xt;

        x0=x;
        y0=y;
        //container.style.transform=`rotateZ(${x}deg)`
       

        // item.style.transform=`perspective(400px) matrix(${cos}, ${-sin}, ${sin}, ${cos}, 0, 0)`

       
      }

      render()
        function render() {


            if(isRotating==false) {
                containers.forEach(container=>{
                container.angleX += container.DX;
            container.angleY += container.DY;
            container.DX *= .95;
            container.DY *= .95;
            container.style.transform = `rotateY(${ container.angleX}deg)`

            })

            }
           
            var rect = container.getBoundingClientRect()
            var mouseX = (mouse.x - (window.innerWidth / 2));
            var mouseY = (mouse.y - (window.innerHeight / 2));
            var angle = Math.atan2(mouseX, mouseY) * 180
            // console.log(angle)

       
            window.requestAnimationFrame(render)
        }




    </script>

</body>

</html>
