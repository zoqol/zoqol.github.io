// Generated by Haxe 4.2.1+bf9ff69
(function ($hx_exports, $global) { "use strict";
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var Globals = $hx_exports["Globals"] = function() { };
Globals.__name__ = true;
var Point = function(x,y) {
	this.x = x;
	this.y = y;
};
Point.__name__ = true;
Point.prototype = {
	__class__: Point
};
var Main = function() {
	this.circCent = new Point(120,200);
	this.circles = null;
	this.i = 0;
	console.log("src/Main.hx:54:","initialized");
	this.canvasElement = js_Boot.__cast(window.document.querySelector("#canv") , HTMLCanvasElement);
	this.w = this.canvasElement.width;
	this.h = this.canvasElement.height;
	this.canvas = this.canvasElement.getContext("2d");
	this.points = [];
	Globals.R = [1,0,.25,0,.15,0,.107,0];
	this.R = Globals.R;
	this.colors = ["#ff00f0","#00e500","#ff5a00","#fffc00","#2a00ff","#00f6ff","#ff0000","#00ff00"];
	var sum = .0;
	var _g = 0;
	var _g1 = this.R;
	while(_g < _g1.length) {
		var u = _g1[_g];
		++_g;
		sum += u;
		console.log("src/Main.hx:69:",u);
	}
	this.r = 200 / sum;
	this.qx = [];
	this.ps = [];
	this.rl = this.R.length;
	var _g = 0;
	var _g1 = this.rl;
	while(_g < _g1) {
		var x = _g++;
		this.qx[x] = [];
	}
	this.fieldRad = this.w / this.rl / 2;
	var timer = new haxe_Timer(15);
	timer.run = $bind(this,this.loop);
};
Main.__name__ = true;
Main.main = function() {
	new Main();
};
Main.prototype = {
	drawCircle: function(x,y,r) {
		var g = this.canvas;
		g.beginPath();
		g.strokeStyle = "#808080";
		g.lineWidth = .5;
		g.arc(x,y,r,0,this.dopi);
		g.closePath();
		g.stroke();
	}
	,loop: function() {
		this.dopi = Math.PI * 2;
		var speed = 2;
		var x = this.circCent.x;
		var y = this.circCent.y;
		var n = 8;
		var g = this.canvas;
		var sc = .8;
		var _g = this.i;
		var _g1 = this.i + speed;
		while(_g < _g1) {
			var j = _g++;
			g.clearRect(0,0,this.w,this.h);
			var a = j / 400 * this.dopi;
			x = this.circCent.x;
			y = this.circCent.y;
			var _g2 = 0;
			var _g3 = this.R.length;
			while(_g2 < _g3) {
				var k = _g2++;
				var rx = this.R[k] * this.r * sc;
				var ry = this.R[k] * this.r * sc;
				var x2 = Math.cos((k + 1) * a) * rx;
				var y2 = Math.sin((k + 1) * a) * ry;
				this.qx[k].unshift(new Point(this.w / this.rl * 3,y));
				var _g4 = 0;
				var _g5 = this.qx[k];
				while(_g4 < _g5.length) {
					var kx = _g5[_g4];
					++_g4;
					kx.x++;
				}
				if(this.qx[k].length > 300) {
					this.qx[k].pop();
				}
				this.drawCircle(x,y,2);
				this.drawCircle(x,y,this.R[k] * this.r * sc);
				y += y2;
				x += x2;
			}
			var p = new Point(this.w / this.rl * 3,y);
			this.ps.unshift(p);
			if(this.points.length > 200) {
				this.points.pop();
			}
			this.points.unshift(new Point(x,y));
			var _g6 = 0;
			var _g7 = this.ps;
			while(_g6 < _g7.length) {
				var pj = _g7[_g6];
				++_g6;
				pj.x++;
			}
			if(this.ps.length > 300) {
				var pqq = this.ps.pop();
				pqq = null;
			}
		}
		var t = 1.0;
		var c = 0;
		g.globalAlpha = 1;
		var _g = 0;
		var _g1 = this.qx;
		while(_g < _g1.length) {
			var q = _g1[_g];
			++_g;
			t *= .5;
			g.beginPath();
			g.strokeStyle = this.colors[c];
			g.globalAlpha = t;
			g.moveTo(q[0].x,q[0].y);
			var _g2 = 0;
			while(_g2 < q.length) {
				var kx = q[_g2];
				++_g2;
				g.lineTo(kx.x,kx.y);
			}
			g.lineWidth = 2;
			g.stroke();
			++c;
		}
		g.lineWidth = 1;
		g.globalAlpha = 1;
		g.beginPath();
		g.moveTo(this.w / this.rl * 3,0);
		g.lineTo(this.w / this.rl * 3,this.h);
		g.moveTo(x,y);
		g.lineTo(this.ps[0].x,this.ps[0].y);
		g.strokeStyle = "#11aaff";
		g.closePath();
		g.stroke();
		g.beginPath();
		g.moveTo(this.ps[0].x,this.ps[0].y);
		var _g = 0;
		var _g1 = this.ps;
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			g.lineTo(p.x + 1,p.y);
		}
		g.moveTo(this.points[0].x,this.points[0].y);
		g.strokeStyle = "#white";
		t = 1.1;
		g.closePath();
		g.stroke();
		g.beginPath();
		g.globalAlpha = 1;
		var l = 0;
		g.strokeStyle = "#ff0000";
		while(l < this.points.length - 1) {
			t *= .99;
			var n1 = this.points[l];
			var n2 = this.points[l + 1];
			g.beginPath();
			g.moveTo(n1.x,n1.y);
			g.lineTo(n2.x,n2.y);
			g.stroke();
			g.closePath();
			g.globalAlpha = t;
			++l;
		}
		g.globalAlpha = 1;
		g.fillStyle = "#ff0000";
		g.arc(x,y,5,0,this.dopi);
		g.fill();
		this.i += speed;
		var sum = 0.0;
		var _g = 0;
		var _g1 = this.R;
		while(_g < _g1.length) {
			var u = _g1[_g];
			++_g;
			sum += u;
		}
		var q = 200 / sum;
		this.r += (q - this.r) * .1;
	}
	,__class__: Main
};
Math.__name__ = true;
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
var haxe_Exception = function(message,previous,native) {
	Error.call(this,message);
	this.message = message;
	this.__previousException = previous;
	this.__nativeException = native != null ? native : this;
};
haxe_Exception.__name__ = true;
haxe_Exception.thrown = function(value) {
	if(((value) instanceof haxe_Exception)) {
		return value.get_native();
	} else if(((value) instanceof Error)) {
		return value;
	} else {
		var e = new haxe_ValueException(value);
		return e;
	}
};
haxe_Exception.__super__ = Error;
haxe_Exception.prototype = $extend(Error.prototype,{
	get_native: function() {
		return this.__nativeException;
	}
	,__class__: haxe_Exception
});
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
haxe_Timer.__name__ = true;
haxe_Timer.prototype = {
	run: function() {
	}
	,__class__: haxe_Timer
};
var haxe_ValueException = function(value,previous,native) {
	haxe_Exception.call(this,String(value),previous,native);
	this.value = value;
};
haxe_ValueException.__name__ = true;
haxe_ValueException.__super__ = haxe_Exception;
haxe_ValueException.prototype = $extend(haxe_Exception.prototype,{
	__class__: haxe_ValueException
});
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
haxe_iterators_ArrayIterator.__name__ = true;
haxe_iterators_ArrayIterator.prototype = {
	hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
	,__class__: haxe_iterators_ArrayIterator
};
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.getClass = function(o) {
	if(o == null) {
		return null;
	} else if(((o) instanceof Array)) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g = 0;
			var _g1 = o.length;
			while(_g < _g1) {
				var i = _g++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( _g ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str.length != 2) {
			str += ", \n";
		}
		str += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str += "\n" + s + "}";
		return str;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g = 0;
		var _g1 = intf.length;
		while(_g < _g1) {
			var i = _g++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		return ((o) instanceof Array);
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return o != null;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return ((o | 0) === o);
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(js_Boot.__downcastCheck(o,cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(((o) instanceof cl)) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return false;
	}
};
js_Boot.__downcastCheck = function(o,cl) {
	if(!((o) instanceof cl)) {
		if(cl.__isInterface__) {
			return js_Boot.__interfLoop(js_Boot.getClass(o),cl);
		} else {
			return false;
		}
	} else {
		return true;
	}
};
js_Boot.__cast = function(o,t) {
	if(o == null || js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw haxe_Exception.thrown("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var $_;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$global.$haxeUID |= 0;
String.prototype.__class__ = String;
String.__name__ = true;
Array.__name__ = true;
var Int = { };
var Dynamic = { };
var Float = Number;
var Bool = Boolean;
var Class = { };
var Enum = { };
js_Boot.__toStr = ({ }).toString;
Globals.R = [];
Main.main();
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this, typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
